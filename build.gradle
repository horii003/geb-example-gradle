import org.apache.tools.ant.taskdefs.condition.Os

ext {
    // The drivers we want to use
    drivers = ["firefox", "chrome", "phantomJs"]

    ext {
        groovyVersion = '2.4.1'
        gebVersion = '0.10.0'
        seleniumVersion = '2.43.1'
        chromeDriverVersion = '2.10'
        phantomJsVersion = '1.9.7'
    }
}

apply plugin: "groovy"
apply from: "gradle/idea.gradle"
apply from: "gradle/ci.gradle"
apply from: "gradle/osSpecificDownloads.gradle"
apply plugin: "geb-browserstack"

buildscript { //2
    repositories {
       mavenCentral()
       jcenter()
    }
    dependencies {
       classpath 'org.gebish:geb-gradle:0.10.0'

    // If using Spock, need to depend on geb-spock
    testCompile "org.gebish:geb-spock:$gebVersion"
    testCompile("org.spockframework:spock-core:1.0-groovy-2.4") {
        exclude group: "org.codehaus.groovy"
    }
    testCompile "org.codehaus.groovy:groovy-all:$groovyVersion"

    // If using JUnit, need to depend on geb-junit (3 or 4)
    testCompile "org.gebish:geb-junit4:$gebVersion"

    // Drivers
    testCompile "org.seleniumhq.selenium:selenium-chrome-driver:$seleniumVersion"
    testCompile "org.seleniumhq.selenium:selenium-firefox-driver:$seleniumVersion"
    testCompile("com.github.detro.ghostdriver:phantomjsdriver:1.1.0") {
        // phantomjs driver pulls in a different selenium version
        transitive = false
    }
    }
}

browserStack {
    application 'http://localhost:8080' //3
    browsers { //4
       firefox_mac_19
       chrome_mac
       delegate."internet explorer_windows_9"
       nexus4 { //5
         capabilities browserName: "android", platform: "ANDROID", device: "Google Nexus 4"
       }
    }
    task { //6
       testClassesDir = test.testClassesDir
       testSrcDirs = test.testSrcDirs
       classpath = test.classpath
    }
    account { //7
       username = "osahorii1"
       accessKey = "vUSTRxfRvv8z9dt7gqmE"
    }
}
